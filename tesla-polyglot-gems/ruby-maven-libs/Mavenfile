# -*- mode:ruby -*-
require File.join( basedir,
                   '..',
                   'ruby-maven',
                   'ruby',
                   'tesla_maven' )

gemspec

inherit "io.tesla.polyglot:tesla-polyglot-gems:#{TeslaMaven::VERSION}"

plugin( :dependency,
        :phase => 'process-sources' ) do
  execute_goals( :unpack,
                 :outputAbsoluteArtifactFilename => false,
                 :artifactItems => [ { :groupId => 'org.apache.maven',
                                       :artifactId => 'apache-maven',
                                       :version => '${project.version}',
                                       :classifier => 'bin',
                                       :type => 'zip',
                                       :outputDirectory => '${project.build.directory}' } ] )
end

plugin( :clean, '2.5',
        :filesets => [ { :directory => 'lib' },
                       { :directory => 'conf' },
                       { :directory => 'boot' },
                       { :directory => 'bin' },
                       { :directory => './',
                         :includes => ['README*', 'LICENSE*', 'NOTICE*'] } ] )

plugin( 'io.tesla.maven.plugins:tesla-license-plugin',
        :header => '${project.basedir}/../../license-header.txt',
        :excludes => [ '**/.*', '**/conf/**/*' ] )

resource do
  target_path "${project.basedir}"
  directory "${project.build.directory}/apache-maven-${project.version}"
  includes [ 'lib/**/*', 'conf/**/*', 'boot/*', 'bin/*', 'README*', 'LICENSE*', 'NOTICE*' ]
end

build do
  execute("check versions", :validate) do |context|
    mavenVersion = context.project.properties[ 'mavenVersion' ]
    if context.project.version != mavenVersion
      raise "\n\n\tmismatched maven versions: #{context.project.version} <=> #{mavenVersion}\n\ttesla uses a different version than ruby/maven.rb\n"
    end
  end
end

# vim: syntax=Ruby
